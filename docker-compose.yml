version: "2"

services: 
  jenkins:
    image: 'bitnami/jenkins:latest'
    ports:
      - '8080:8080'
      - '443:8433'
    volumes:
      - 'jenkins_data:/bitnami'
      
  sonarqube:
    image: sonarqube
    ports:
      - "9000:9000"
    networks:
      - sonarnet
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

  db:
    image: postgres
    ports:
    - "5432:5432"
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      # This needs explicit mapping due to https://github.com/docker-library/postgres/blob/4e48e3228a30763913ece952c611e5e9b95c8759/Dockerfile.template#L52
      - postgresql_data:/var/lib/postgresql/data
      
  elasticsearch:
    image: elasticsearch:2.4.6
    environment:
      - cluster_name=sonar-statistics
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - sonarnet
      
  kibana:
    image: kibana:4.6.6
    ports:
      - 5601:5601
    networks: 
      - sonarnet
    depends_on:
      - elasticsearch

networks:
  sonarnet:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data:
  jenkins_data:
    driver: local
  esdata1:
    driver: local